//////////////////////////////ateliers html 



<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Ateliers - Prototype</title>
  <link rel="stylesheet" href="css/styles.css">
  <style>
    body {
      font-family: 'Segoe UI', Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f4f6f9;
    }
    /* Navbar */
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 15px 30px;
      background: linear-gradient(to right, #3a7bd5, #00d2ff);
      color: white;
      box-shadow: 0 2px 6px rgba(0,0,0,0.2);
    }
    header h1 { margin: 0; font-size: 22px; }
    .header-right {
      display: flex;
      align-items: center;
      gap: 15px;
    }
    .search-box input {
      padding: 6px 10px;
      border-radius: 5px;
      border: none;
    }
    #logoutBtn {
      background: #d9534f;
      color: white;
      border: none;
      padding: 6px 12px;
      border-radius: 5px;
      cursor: pointer;
    }
    #logoutBtn:hover { background: #c9302c; }

    /* Container */
    .container {
      max-width: 900px;
      margin: 30px auto;
      background: white;
      padding: 25px;
      border-radius: 10px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.15);
    }
    .container h2 {
      margin-bottom: 15px;
    }
    .add-btn {
      background-color: #3a7bd5;
      color: white;
      padding: 8px 16px;
      border: none;
      border-radius: 6px;
      cursor: pointer;
      font-weight: bold;
    }
    .add-btn:hover { background-color: #1f5fa1; }

    /* Table */
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      border-radius: 8px;
      overflow: hidden;
    }
    th, td {
      padding: 12px;
      text-align: left;
    }
    th {
      background-color: #3a7bd5;
      color: white;
    }
    tr:nth-child(even) { background-color: #f2f8ff; }
    tr:hover { background-color: #e6f2ff; }
    .action-btn {
      cursor: pointer;
      border: none;
      background: none;
      font-size: 18px;
      margin-right: 8px;
    }
    .edit-btn { color: #f0ad4e; }
    .delete-btn { color: #d9534f; }

    /* Modal */
    .modal {
      display: none;
      position: fixed;
      top:0; left:0; right:0; bottom:0;
      background: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background: white;
      padding: 20px;
      border-radius: 10px;
      width: 400px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.25);
      text-align: center;
    }
    .modal-content h3 {
      margin-bottom: 15px;
    }
    .modal-content input {
      width: 100%;
      padding: 8px;
      margin-bottom: 12px;
      border-radius: 5px;
      border: 1px solid #ccc;
    }
    .modal-content button {
      width: 100%;
      padding: 10px;
      background-color: #3a7bd5;
      color: white;
      font-weight: bold;
      border-radius: 6px;
      border: none;
      cursor: pointer;
    }
    .modal-content button:hover { background-color: #1f5fa1; }

    /* Lien atelier */
    .atelier-link { cursor:pointer; color:#3a7bd5; font-weight: bold; }
    .atelier-link:hover { text-decoration: underline; }
  </style>
</head>
<body>

  <header>
    <h1>Gestion des Ateliers</h1>
    <div class="header-right">
      <div class="search-box">
        <input type="text" id="searchInput" placeholder="Rechercher atelier...">
      </div>
      <button id="logoutBtn">D√©connexion</button>
    </div>
  </header>

  <div class="container">
    <h2>Liste des Ateliers</h2>
    <button class="add-btn" id="addAtelierBtn">+ Ajouter un Atelier</button>

    <table>
      <thead>
        <tr>
          <th>ID</th>
          <th>Nom</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="atelierTableBody">
        <!-- Ateliers inject√©s ici -->
      </tbody>
    </table>
  </div>

  <!-- Modal -->
  <div class="modal" id="atelierModal">
    <div class="modal-content">
      <h3 id="modalTitle">Ajouter Atelier</h3>
      <input type="text" id="atelierName" placeholder="Nom de l'atelier">
      <button id="saveAtelierBtn">Sauvegarder</button>
    </div>
  </div>

  <script src="js/ateliers.js"></script>
</body>
</html>


























/////////////////ateliers js 


// Redirection si non connect√©
if (!sessionStorage.getItem('role')) window.location.href = 'index.html';

// --- S√©lecteurs
const tableBody = document.getElementById('atelierTableBody');
const addBtn = document.getElementById('addAtelierBtn');
const modal = document.getElementById('atelierModal');
const modalTitle = document.getElementById('modalTitle');
const atelierNameInput = document.getElementById('atelierName');
const saveBtn = document.getElementById('saveAtelierBtn');
const logoutBtn = document.getElementById('logoutBtn');
const searchInput = document.getElementById('searchInput');

// --- √âtat
let allAteliers = [];   // source compl√®te
let ateliers = [];      // liste filtr√©e affich√©e
let editAtelierId = null;

// --------------------- Utilitaires
const fold = (s) => (s || '')
  .toString()
  .normalize('NFD')
  .replace(/[\u0300-\u036f]/g, '')
  .toLowerCase();

// --------------------- Auth
logoutBtn.addEventListener('click', () => {
  sessionStorage.clear();
  window.location.href = 'index.html';
});

// --------------------- Modal
addBtn.addEventListener('click', () => {
  editAtelierId = null;
  modalTitle.textContent = "Ajouter Atelier";
  atelierNameInput.value = '';
  modal.style.display = 'flex';
});

// Fermer le modal en cliquant hors contenu
window.addEventListener('click', (e) => {
  if (e.target === modal) modal.style.display = 'none';
});

// --------------------- Chargement / rendu
async function loadAteliers() {
  try {
    const res = await fetch('http://localhost:3000/api/ateliers');
    allAteliers = await res.json();
    applyFilter(); // met √† jour `ateliers` et appelle renderTable()
  } catch (err) {
    alert('Erreur lors du chargement des ateliers');
    console.error(err);
  }
}

function applyFilter() {
  const q = fold(searchInput ? searchInput.value : '');
  if (!q) {
    ateliers = [...allAteliers];
  } else {
    ateliers = allAteliers.filter(a => fold(a.nom).includes(q) || fold(String(a.id)).includes(q));
  }
  renderTable();
}

function renderTable() {
  tableBody.innerHTML = '';
  ateliers.forEach(a => {
    const tr = document.createElement('tr');
    tr.innerHTML = `
      <td>${a.id}</td>
      <td><span class="atelier-link" data-id="${a.id}">${a.nom}</span></td>
      <td>
        <button class="action-btn edit-btn" data-id="${a.id}" title="Modifier">‚úèÔ∏è</button>
        <button class="action-btn delete-btn" data-id="${a.id}" title="Supprimer">üóëÔ∏è</button>
      </td>
    `;
    tableBody.appendChild(tr);
  });
}

// --------------------- √âcouteurs (d√©l√©gation)
tableBody.addEventListener('click', async (e) => {
  const id = e.target.dataset.id;

  // Ouvrir page machines en cliquant sur le nom
  if (e.target.classList.contains('atelier-link')) {
    sessionStorage.setItem('atelierId', id);
    window.location.href = 'machines.html';
    return;
  }

  // Modifier
  if (e.target.classList.contains('edit-btn')) {
    const atelier = allAteliers.find(a => a.id === Number(id));
    if (!atelier) return;
    editAtelierId = Number(id);
    modalTitle.textContent = "Modifier Atelier";
    atelierNameInput.value = atelier.nom;
    modal.style.display = 'flex';
    return;
  }

  // Supprimer
  if (e.target.classList.contains('delete-btn')) {
    if (!confirm('Voulez-vous supprimer cet atelier ?')) return;
    try {
      await fetch(`http://localhost:3000/api/ateliers/${id}`, { method: 'DELETE' });
      await loadAteliers();
    } catch (err) {
      alert('Erreur lors de la suppression');
      console.error(err);
    }
  }
});

// Recherche en direct
if (searchInput) {
  // Filtrage √† chaque saisie
  searchInput.addEventListener('input', applyFilter);
}

// --------------------- Sauvegarde (POST / PUT)
saveBtn.addEventListener('click', async () => {
  const nom = atelierNameInput.value.trim();
  if (!nom) return alert('Nom obligatoire');

  try {
    if (editAtelierId) {
      // PUT
      await fetch(`http://localhost:3000/api/ateliers/${editAtelierId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ nom })
      });
    } else {
      // POST
      await fetch('http://localhost:3000/api/ateliers', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ nom })
      });
    }
    modal.style.display = 'none';
    await loadAteliers();
  } catch (err) {
    alert('Erreur lors de la sauvegarde');
    console.error(err);
  }
});

// --------------------- GO
loadAteliers();
